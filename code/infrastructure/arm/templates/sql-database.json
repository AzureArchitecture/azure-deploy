{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "databaseName": {
      "type": "string"
    },
    "sqlServerName": {
      "type": "string"
    },
    "elasticPoolName": {
      "type": "string",
      "defaultValue": ""
    },
    "databaseSize": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "1",
        "2",
        "3",
        "4",
        "6",
        "7",
        "9",
        "10",
        "11",
        "15"
      ]
    },
    "databaseSizeBytes": {
      "type": "string",
      "defaultValue": ""
    },
    "databaseTier": {
      "type": "string",
      "defaultValue": "ElasticPool",
      "allowedValues": [
        "ElasticPool",
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "dataMaskingExemptPrincipals": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Semi-colon separated list of database principals who are exempt from the following data masking rules"
      }
    },
    "dataMaskingRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Object array where object is of type DataMaskingRuleProperties: https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/databases/datamaskingpolicies/rules#DataMaskingRuleProperties"
      }
    },
    "diagnosticsRetentionDays": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "descrtiption": "The number of days that diagnostic logs will be stored for. Default value is forever, max is 1 year."
      }
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The id of the subscription for the Log Analytics Workspace. This defaults to the current subscription."
      }
    },
    "logAnalyticsResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource group of the Log Analytics Workspace."
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the Log Analytics Workspace."
      }
    },
    "ApplicationName": {
      "defaultValue": "ADAP",
      "type": "string",
      "metadata": {
        "description": "Name of the application, service, or workload the resource is associated with."
      }
    },
    "Approver": {
      "defaultValue": "approver@company.org",
      "type": "string",
      "metadata": {
        "description": "Person responsible for approving costs related to this resource."
      }
    },
    "BudgetAmount": {
      "defaultValue": "0",
      "type": "string",
      "metadata": {
        "description": "Money allocated for this application, service, or workload."
      }
    },
    "BusinessUnit": {
      "defaultValue": "CORP",
      "type": "string",
      "metadata": {
        "description": "Top-level division of your company that owns the subscription or workload the resource belongs to. In smaller organizations, this tag might represent a single corporate or shared top-level organizational element."
      }
    },
    "CostCenter": {
      "defaultValue": "8675-309",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "DR": {
      "defaultValue": "Mission-Critical",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "EndDate": {
      "defaultValue": "9999-12-31",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service is scheduled for retirement."
      }
    },
    "Env": {
      "defaultValue": "test",
      "type": "string",
      "metadata": {
        "description": "Deployment environment of the application, workload, or service."
      }
    },
    "Owner": {
      "defaultValue": "owner@company.org",
      "type": "string",
      "metadata": {
        "description": "Owner of the application, workload, or service."
      }
    },
    "Requester": {
      "defaultValue": "requester@company.org",
      "type": "string",
      "metadata": {
        "description": "User who requested the creation of this application."
      }
    },
    "ServiceClass": {
      "defaultValue": "Gold",
      "type": "string",
      "metadata": {
        "description": "Service level agreement level of the application, workload, or service."
      }
    },
    "StartDate": {
      "defaultValue": "2020-01-01",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service was first deployed."
      }
    }
  },
  "variables": {
    "deployToElasticPool": "[greater(length(parameters('elasticPoolName')), 0)]",
    "databaseSettings": {
      "nonElasticPool": {
        "sku": {
          "name": "[variables('databaseSkuName')]",
          "tier": "[parameters('databaseTier')]",
          "size": "[parameters('databaseSize')]"
        },
        "properties": {
          "maxSizeBytes": "[parameters('databaseSizeBytes')]"
        }
      },
      "elasticPool": {
        "sku": {
          "name": "ElasticPool"
        },
        "properties": {
          "elasticPoolId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Sql/servers/', parameters('sqlServerName'), '/elasticPools/', parameters('elasticPoolName'))]"
        }
      }
    },
    "databaseSkuName": "[if(equals(parameters('databaseTier'), 'Basic'), parameters('databaseTier'), concat(substring(parameters('databaseTier'), 0, 1), parameters('databaseSize')))]",
    "diagnosticsSettings": [
      "QueryStoreRuntimeStatistics",
      "QueryStoreWaitestatistics",
      "Errors",
      "DatabaseWaitestatistics",
      "Timeouts",
      "Blocks",
      "SQLInsights",
      "AutomaticTuning",
      "Deadlocks"
    ]
  },
  "resources": [
    {
      "name": "[concat(parameters('sqlServerName'), '/', parameters('databaseName'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2017-10-01-preview",
      "location": "[resourceGroup().location]",
      "sku": "[if(variables('deployToElasticPool'), variables('databaseSettings').elasticPool.sku, variables('databaseSettings').nonElasticPool.sku)]",
      "properties": "[if(variables('deployToElasticPool'), variables('databaseSettings').elasticPool.properties, variables('databaseSettings').nonElasticPool.properties)]",
      "tags": {
        "Display Name": "sql database: [parameters('databaseName')]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "resources": [
        {
          "name": "current",
          "type": "transparentDataEncryption",
          "apiVersion": "2014-04-01",
          "properties": {
            "status": "Enabled"
          },
          "dependsOn": [
            "[parameters('databaseName')]"
          ]
        }
      ]
    }
  ],
  "outputs": {
    "sql-database-name": {
      "type": "string",
      "value": "[parameters('databaseName')]"
    }
  }
}
