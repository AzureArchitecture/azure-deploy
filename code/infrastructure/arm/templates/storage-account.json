{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "DisplayName": "Azure Storage Account.",
    "Author": "Patrick Gallucci",
    "UpdateDate": "Example Name"
  },
  "parameters": {
    "ResourceGroupName": {
      "defaultValue": "rg-ORG-TAG-adap-dev-pcus",
      "type": "string",
      "metadata": {
        "description": "The name of the Resource Group."
      }
    },
    "StorageAccountName": {
      "defaultValue": "stgadapdevcus",
      "type": "string",
      "metadata": {
        "description": "The name of the storage account."
      }
    },
    "AccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of storage account."
      },
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "StorageKind": {
      "type": "string",
      "metadata": {
        "description": "The kind of storage account."
      },
      "defaultValue": "StorageV2",
      "allowedValues": [
        "Storage",
        "StorageV2",
        "BlobStorage"
      ]
    },
    "AccessTier": {
      "type": "string",
      "defaultValue": "Hot",
      "allowedValues": [
        "Hot",
        "Cool"
      ],
      "metadata": {
        "description": "This setting is required if using Blob Storage as the storageKind, otherwise can be left blank"
      }
    },
    "ApplicationName": {
      "defaultValue": "ADAP",
      "type": "string",
      "metadata": {
        "description": "Name of the application, service, or workload the resource is associated with."
      }
    },
    "Approver": {
      "defaultValue": "approver@company.org",
      "type": "string",
      "metadata": {
        "description": "Person responsible for approving costs related to this resource."
      }
    },
    "BudgetAmount": {
      "defaultValue": "0",
      "type": "string",
      "metadata": {
        "description": "Money allocated for this application, service, or workload."
      }
    },
    "BusinessUnit": {
      "defaultValue": "CORP",
      "type": "string",
      "metadata": {
        "description": "Top-level division of your company that owns the subscription or workload the resource belongs to. In smaller organizations, this tag might represent a single corporate or shared top-level organizational element."
      }
    },
    "CostCenter": {
      "defaultValue": "8675-309",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "DR": {
      "defaultValue": "Mission-Critical",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "EndDate": {
      "defaultValue": "9999-12-31",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service is scheduled for retirement."
      }
    },
    "Env": {
      "defaultValue": "Test",
      "type": "string",
      "metadata": {
        "description": "Deployment environment of the application, workload, or service."
      }
    },
    "Owner": {
      "defaultValue": "owner@company.org",
      "type": "string",
      "metadata": {
        "description": "Owner of the application, workload, or service."
      }
    },
    "Requester": {
      "defaultValue": "requester@company.org",
      "type": "string",
      "metadata": {
        "description": "User who requested the creation of this application."
      }
    },
    "ServiceClass": {
      "defaultValue": "Gold",
      "type": "string",
      "metadata": {
        "description": "Service level agreement level of the application, workload, or service."
      }
    },
    "StartDate": {
      "defaultValue": "2020-01-01",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service was first deployed."
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "[parameters('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('accountType')]"
      },
      "kind": "[parameters('storageKind')]",
      "tags": {
        "Display Name": "storage account: [parameters('StorageAccountName')]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "properties": {
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "[parameters('accessTier')]",
        "supportsHttpsTrafficOnly": true
      }
    }
  ],
  "outputs": {
    "storage-account-key": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',parameters('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
    },
    "storage-account-name": {
      "type": "string",
      "value": "[parameters('StorageAccountName')]"
    },
    "storage-account-connection-string": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',parameters('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
    }
  }
}