name: $(Build.DefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
- master

pool:
  vmImage: windows-2019

variables:
 - template: devops/pipelines/variables/azure-shared.yml

stages:

# -----------------------------------------------------------------------------
# Stage 1 - Continuous Integration (CI)
# -----------------------------------------------------------------------------
- stage: build
  condition: and(succeeded(), eq(variables['deploy-build'], '1'))
  jobs:
  - job: buildjob
    displayName: 'build azure-deploy'
    steps:
    - template: devops/pipelines/step/arm-build.yml
      parameters:
        armTemplateFile: '$(armTemplateRoot)/storage-account.json'
        armParameterTemplateFile: '$(armParameterTemplateRoot)/storage-account.test.parameter.json'
        location: '$(location)'
        azureSubscription: '$(azureSubscription)'
        resourceGroup: '$(resource-group)'
        ev: '$(ev)'

# -----------------------------------------------------------------------------
# Stage 2 - Continuous Testing (CT)
# -----------------------------------------------------------------------------
- stage: smoketest
  condition: and(succeeded(), eq(variables['deploy-smoke'], '1'))
  dependsOn: build
  variables:
  - template: devops/pipelines/variables/smoke-variables.yml
  - template: devops/pipelines/variables/smoke-features.yml
  jobs:
  - job: smoketestjob
    pool:
      vmImage: windows-2019
    steps:
    - template: devops/pipelines/step/arm-storage-account.yml
      parameters:
        armTemplateFile: '$(armTemplateRoot)/storage-account.json'
        armParameterTemplateFile: '$(armParameterTemplateRoot)/storage-account.test.parameter.json'
        location: '$(location)'
        azureSubscription: '$(azureSubscription)'
        resourceGroup: '$(resource-group)'
        ev: '$(ev)'
    - template: devops/pipelines/step/arm-storage-account-container.yml
      parameters:
        armTemplateFile: '$(armTemplateRoot)/storage-account-container.json'
        armParameterTemplateFile: '$(armParameterTemplateRoot)/storage-account-container.test.parameter.json'
        location: '$(location)'
        azureSubscription: '$(azureSubscription)'
        resourceGroup: '$(resource-group)'
        ev: '$(ev)'
        storage-account-name: '$(storage-account-name)'
    - template: devops/pipelines/step/arm-sql-server.yml
      parameters:
        armTemplateFile: '$(armTemplateRoot)/sql-server.json'
        armParameterTemplateFile: '$(armParameterTemplateRoot)/sql-server.test.parameter.json'
        location: '$(location)'
        azureSubscription: '$(azureSubscription)'
        resourceGroup: '$(resource-group)'
        ev: '$(ev)'
    - template: devops/pipelines/step/arm-event-hub-namespace.yml
      parameters:
        armTemplateFile: '$(armTemplateRoot)/event-hub-namespace.json'
        armParameterTemplateFile: '$(armParameterTemplateRoot)/event-hub-namespace.test.parameter.json'
        location: '$(location)'
        azureSubscription: '$(azureSubscription)'
        resourceGroup: '$(resource-group)'
        ev: '$(ev)'
    - template: devops/pipelines/step/arm-event-hub-hub.yml
      parameters:
        armTemplateFile: '$(armTemplateRoot)/event-hub-hub.json'
        armParameterTemplateFile: '$(armParameterTemplateRoot)/event-hub-hub.test.parameter.json'
        location: '$(location)'
        azureSubscription: '$(azureSubscription)'
        resourceGroup: '$(resource-group)'
        ev: '$(ev)'
    - template: devops/pipelines/step/arm-remove-resource-group.yml
      parameters:
        azureSubscription: '$(azureSubscription)'
        resourceGroup: '$(resource-group)'

# -----------------------------------------------------------------------------
# Stage 3 - Continuous Delivery (CD)
# -----------------------------------------------------------------------------
- stage: development
  condition: and(succeeded(), eq(variables['deploy-dev'], '1'))
  dependsOn: smoketest
  variables:
  - template: devops/pipelines/variables/development-variables.yml
  - template: devops/pipelines/variables/development-features.yml
  jobs:
  - job: developmentjob
    pool:
      vmImage: windows-2019
    steps:
    - template: devops/pipelines/step/arm-storage-account.yml
      parameters:
        armTemplateFile: '$(armTemplateRoot)/storage-account.json'
        armParameterTemplateFile: '$(armParameterTemplateRoot)/storage-account.0.parameter.json'
        location: '$(location)'
        azureSubscription: '$(azureSubscription)'
        resourceGroup: '$(resource-group)'
        ev: '$(ev)'
    - template: devops/pipelines/step/arm-sql-server.yml
      parameters:
        armTemplateFile: '$(armTemplateRoot)/sql-server.json'
        armParameterTemplateFile: '$(armParameterTemplateRoot)/sql-server.0.parameter.json'
        location: '$(location)'
        azureSubscription: '$(azureSubscription)'
        resourceGroup: '$(resource-group)'
        ev: '$(ev)'
